{
    "name": "process_order",
    "description": "Processes an order and sends to customer",
    "version": 1,
    "schemaVersion": 2,
    "ownerEmail": "fake@thing.com",
    "tasks": [
        {
            "name": "Wait for stock",
            "taskReferenceName": "LoopTask",
            "type": "DO_WHILE",
            "loopCondition": "if ($.LoopTask['iteration'] < 5 ) { true; } else { false; }", // fix this, make it use the check stock
            "loopOver": [
                {
                    "name": "check_stock",
                    "taskReferenceName": "check_stock",
                    "inputParameters": {
                        "orderId": "${workflow.input.orderId}"
                    },
                    "type": "SIMPLE"
                },
                {
                    "name": "switch_task",
                    "taskReferenceName": "is_order_in_stock",
                    "inputParameters": {
                        "case_value_param": "${check_stock.output.inStock}"
                    },
                    "type": "SWITCH",
                    "evaluatorType": "value-param",
                    "expression": "case_value_param",
                    "decisionCases": {
                        "false": [
                            {
                                "name": "compose_delay_message",
                                "taskReferenceName": "delay_message",
                                "type": "INLINE",
                                "inputParameters": {
                                    "value": "${check_stock.output.restockEtaDays}",
                                    "evaluatorType": "javascript",
                                    "expression": "function e() { return {\"message\": \"Stock is backordered, estimated eta days: \" + $.value}} e();"
                                }
                            },
                            {
                                "name": "notify_customer",
                                "taskReferenceName": "notify_customer_of_delay",
                                "inputParameters": {
                                    "email": "${workflow.input.email}",
                                    "message": "${delay_message.output.message}"
                                },
                                "type": "SIMPLE"
                            },
                            {
                                "name": "delay_workflow",
                                "taskReferenceName": "delay_workflow",
                                "type": "WAIT",
                                "inputParameters": {
                                    "evaluatorType": "javascript",
                                    "expression": "function e(){} e();"
                                },
                                "startDelay": 10
                            }
                        ]
                    },
                    "defaultCase": [
                        {
                            "name": "package_and_send_order",
                            "taskReferenceName": "package_and_send_order_to_address",
                            "inputParameters": {
                                "orderId": "${workflow.input.orderId}",
                                "address": "${workflow.input.email}"
                            },
                            "type": "SIMPLE"
                        },
                        {
                            "name": "notify_customer",
                            "taskReferenceName": "notify_customer_of_order",
                            "inputParameters": {
                                "email": "${workflow.input.email}",
                                "message": "${workflow.input.message}"
                            },
                            "type": "SIMPLE"
                        },
                        {
                            "name": "terminate",
                            "taskReferenceName": "terminate",
                            "type": "TERMINATE",
                            "inputParameters": {
                                "terminationStatus": "COMPLETED"
                            }
                        }
                    ],
                    "startDelay": 0,
                    "optional": false
                }
            ]
        },
        {
            "name": "terminate_fail",
            "taskReferenceName": "terminate_fail",
            "type": "TERMINATE",
            "inputParameters": {
                "terminationStatus": "FAILED"
            }
        }
    ]
}