/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package conductor;

import java.util.Arrays;

import com.netflix.conductor.client.automator.TaskRunnerConfigurer;
import com.netflix.conductor.client.http.TaskClient;
import com.netflix.conductor.client.worker.Worker;

import ch.qos.logback.classic.Level;
import ch.qos.logback.classic.Logger;
import org.slf4j.LoggerFactory;

import conductor.service.NotificationService;
import conductor.service.StockService;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        Logger root = (Logger) LoggerFactory.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME);
        root.setLevel(Level.INFO);

        TaskClient taskClient = new TaskClient();
        taskClient.setRootURI("http://localhost:8080/api/"); // Point this to the server API

        int threadCount = 3; // number of threads used to execute workers. To avoid starvation, should be
                             // same or more than number of workers

        Worker worker1 = new StockWorker("check_order_in_stock", new StockService());
        Worker worker2 = new PackagingWorker("package_and_send_order", new StockService());
        Worker worker3 = new NotificationWorker("notify_customer", new NotificationService());

        // Create TaskRunnerConfigurer
        TaskRunnerConfigurer configurer = new TaskRunnerConfigurer.Builder(taskClient,
                Arrays.asList(worker1, worker2, worker3))
                .withThreadCount(threadCount)
                .build();

        // Start the polling and execution of tasks
        configurer.init();
    }
}
