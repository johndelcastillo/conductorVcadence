/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package worker;

import com.uber.cadence.client.WorkflowClient;
import com.uber.cadence.client.WorkflowClientOptions;
import com.uber.cadence.serviceclient.ClientOptions;
import com.uber.cadence.serviceclient.WorkflowServiceTChannel;
import com.uber.cadence.worker.Worker;
import com.uber.cadence.worker.WorkerFactory;

import org.slf4j.LoggerFactory;

import ch.qos.logback.classic.Level;
import ch.qos.logback.classic.Logger;
import worker.service.NotificationService;
import worker.service.StockService;

public class App {

        public static final String HOST = "lb-4cb3bc1e-a8a5-40eb-a031-98c99-8a839478a0563d5b.elb.us-west-2.amazonaws.com";
        public static final String DOMAIN = "samples-domain";
        public static final String TASK_LIST = "orders-task-list-java";

        public static void main(String[] args) {
                Logger root = (Logger) LoggerFactory.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME);
                root.setLevel(Level.INFO);

                WorkflowClient workflowClient = WorkflowClient.newInstance(
                                new WorkflowServiceTChannel(ClientOptions.newBuilder()
                                                .setHost(HOST)
                                                .setPort(7933)
                                                .build()),
                                WorkflowClientOptions.newBuilder().setDomain(DOMAIN).build());

                WorkerFactory factory = WorkerFactory.newInstance(workflowClient);
                Worker worker = factory.newWorker(TASK_LIST);

                worker.registerWorkflowImplementationTypes(worker.OrdersWorkflowImpl.class);
                worker.registerActivitiesImplementations(
                                new worker.OrdersWorker(new StockService(), new NotificationService()));

                factory.start();
                System.out.println("Ready to take orders!");
        }
}
